name: Weekly Jobs

on:
  schedule:
    - cron: "53 4 * * 6" # 4:53 every saturday
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-20.04
    outputs:
      build_id: ${{ steps.build.outputs.build_id }}
      branch_name: ${{ steps.branch_name.outputs.generated }}
    steps:
      - name: Generate build id
        id: build
        uses: ./.github/composite/build-id

      - name: Generate Branch Name
        id: branch_name
        run: |
          echo "generated=$(date -I)" >> $GITHUB_OUTPUT

      - uses: peterjgrainger/action-create-branch@64aa569aea81305305c6e92bd236d8c427debff8 # v2.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{ steps.branch_name.outputs.generated }}
          sha: ${{ steps.build.outputs.commit_ref }}

  package-analysis:
    runs-on: ubuntu-20.04
    needs:
      - backup
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ needs.backup.outputs.branch_name }}
          submodules: true

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: ${{ needs.backup.outputs.build_id != '' }}
          cache-key: ${{ needs.backup.outputs.build_id }}

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: ts-graphviz/setup-graphviz@v1

      - name: Install melos
        run: dart pub get
        shell: bash

      - name: Create lock file cache
        if: ${{ needs.backup.outputs.build_id != '' }}
        uses: actions/cache@v3
        with:
          path: '**/pubspec.lock'
          key: ${{ needs.backup.outputs.build_id }}

      - name: Run melos analysis
        shell: bash
        env:
          TMP: ${{ runner.temp }}
        run: |
          dart run melos ls -r --json -l --ignore='*example*' >> "$TMP/melos-json.json"
          dart run melos ls -r --graph --ignore='*example*' >> "$TMP/melos-graph.json"
          dart run melos ls -r --gviz --ignore='*example*' >> "$TMP/melos-gviz.gv"

      - name: Execute diagram generator
        shell: bash
        env:
          TMP: ${{ runner.temp }}
        run: |
          chmod +w ./docs/diagrams/*
          pip install -r ./tools/package_diagrams.requirements.txt
          python ./tools/package_diagrams.py "$TMP/melos-gviz.gv" "$GITHUB_WORKSPACE/docs/diagrams"

      - name: create pull request
        run: |
          gh pr create -B trunk -H ${{ needs.backup.outputs.branch_name }} --title 'ci: backup ${{ needs.backup.outputs.branch_name }}'
